snippet loop-array "Iteration elements in array"
# Iterate over an array in Bash
for item in "${array[@]}"; do
    echo "$item"
done
endsnippet

snippet return-function-value
# Define a function that returns a value
function my_function() {
    local result="Your result here"
    echo "$result"
}

# Call the function and store the result in a variable
result_variable=$(my_function)
endsnippet

snippet if-example "If example"
if [[ -z "$string" ]]; then
  echo "String is empty"
elif [[ -n "$string" ]]; then
  echo "String is not empty"
fi
endsnippet

snippet print-variable  "Print variable string in side string will need to cover with $()" 
echo "I'm in $(pwd)"
echo "I'm in `pwd`"  # obsolescent
endsnippet

snippet declare-array
Fruits=('Apple' 'Banana' 'Orange')
Fruits[0]="Apple"
Fruits[1]="Banana"
Fruits[2]="Orange"
endsnippet

snippet declare-dict
# Define
declare -A sounds
# Access value
sounds[dog]="bark"
endsnippet

snippet loop-dict "Iteration over dictionary" 
for key in "${!sounds[@]}"; do
  echo "$key"
done
endsnippet

snippet switch-case
case "$1" in
start | up)
  vagrant up
  ;;
*)
  echo "Usage: $0 {start|stop|ssh}"
  ;;
esac
endsnippet

snippet args "Basic switch for script argument" 
    while [[ $# -gt 0 ]]; do
        case "$1" in
            -f|--flag)
                flag=1
                shift
                ;;
            -a|--argument)
                argument="$2"
                shift 2
                ;;
            *)
                break
                ;;
        esac
    done
endsnippet

snippet if-have-dir "Check if directory exists" 
if [ -d "$DIRECTORY" ]; then
  # Control will enter here if $DIRECTORY exists.
fi
endsnippet

snippet if-have-file "Check if file is exists" 
if [ -f "path/to/file" ]; then
    echo "File exists"
else
    echo "File does not exist"
fi
endsnippet

snippet alert-text "red tex" b
echo -e "\e[31m${1:This is alert text}\e[0m"
endsnippet


snippet check-command "Check if command exist in shell" 
if command -v git &>/dev/null; then
    echo "git exists"
else
    echo "git does not exist"
fi
endsnippet


snippet if-command "Check if command exist in shell" 
if command -v git &>/dev/null; then
    echo "git exists"
else
    echo "git does not exist"
fi
endsnippet


snippet notify "Description"
notify-send -h string:fgcolor:#C8CAFE "${1:All repo have been updated to github.}"
endsnippet



snippet iterate-folder-file "Loop file in folder by folder path" b
for file in ${1:/path/to/folder/*}; do
    # Your code here, for example:
    echo "Processing $file"
done
endsnippet

snippet script-dir "Description" 
${1:DIR}="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
endsnippet



snippet file_extension "File with extension / no extension / remove path from input file path"
fullfile="hello/world.txt"
filename=$(basename -- "$fullfile")
extension="${filename##*.}"
filename_no_ext="${filename%.*}"
endsnippet
snippet default_value "Set value of variable base on other, if this variable is not set/ null set this variable with default value" b
output_folder=${2:=default_value}
endsnippet
